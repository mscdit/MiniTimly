---
openapi: 3.0.1
info:
  title: Timly API
  version: v1
components:
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    item:
      type: object
      properties:
        item_id:
          type: integer
        name:
          type: string
        status:
          type: string
        remarks:
          type: string
        root_category:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        category:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        responsible:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        location:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        custom_attributes:
          type: object
          properties:
            attribute_key1:
              type: string
            attribute_key2:
              type: string
            attribute_key3:
              type: string
        barcode:
          type: string
      example:
        item_id: '12345'
        name: Eves MacBook
        status: active
        remarks: some remarks
        root_category:
          id: '1234'
          name: root_category name
        category:
          id: '5678'
          name: category name
        responsible:
          id: '0815'
          name: Eves service provider
        location:
          id: '123'
          name: location xyz
        custom_attributes:
          custom_attribut_key1: value1
          custom_attribut_key2: value2
          custom_attribut_key3: value3
        barcode: '123456'
    new_item:
      type: object
      properties:
        ref_no:
          type: string
        name:
          type: string
        root_category:
          type: string
        category:
          type: string
        status:
          type: string
      example:
        ref_no: external (custom/optional) reference id
        name: MacBook Pro Mid 2009
        root_category: IT-Clients
        category: Laptops
        status: active
paths:
  "/api/v1/items":
    post:
      summary: creates an item
      tags:
      - items
      security:
      - Bearer: {}
      description: Creates a new item with given key/value data attributes.
      parameters: []
      responses:
        '200':
          description: Item created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                    - Item created successfully.
                  id:
                    type: integer
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/new_item"
  "/api/v1/items/{id}":
    get:
      summary: retrieves an item
      tags:
      - items
      security:
      - Bearer: {}
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: item found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/item"
        '401':
          description: invalid authorization
        '404':
          description: item not found
        '406':
          description: unsupported accept header
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
